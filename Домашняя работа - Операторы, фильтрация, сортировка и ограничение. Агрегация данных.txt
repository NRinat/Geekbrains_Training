Практическое задание по теме «Операторы, фильтрация, сортировка и ограничение»

1. Пусть в таблице users поля created_at и updated_at оказались незаполненными. Заполните их текущими датой и временем

Решение:
UPDATE users
SET
created_at = Now(),
updated_at = Now();   

2. Таблица users была неудачно спроектирована. Записи created_at и updated_at были заданы типом VARCHAR и в них долгое время 
помещались значения в формате 20.10.2017 8:10. Необходимо преобразовать поля к типу DATETIME, сохранив введённые ранее значения.    

Решение:
а) UPDATE users
SET created_at = STR_TO_DATE(created_at,'%d.%m.%Y %H:%i'),
AND updated_at = STR_TO_DATE(updated_at,'%d.%m.%Y %H:%i');
b) UPDATE users
SET created_at = DATETIME NOT NULL,
AND updated_at = DATETIME NOT NULL;

или

ALTER TABLE users
MODIFY COLUMN created_at DATETIME NOT NULL,
MODIFY COLUMN updated_at DATETIME NOT NULL;

3. В таблице складских запасов storehouses_products в поле value могут встречаться самые разные цифры: 0, если товар закончился 
и выше нуля, если на складе имеются запасы. Необходимо отсортировать записи таким образом, чтобы они выводились в порядке увеличения 
значения value. Однако нулевые запасы должны выводиться в конце, после всех записей.

Решение:
SELECT value
FROM storehouses_products
ORDER BY value>0, value=0 Desc 


4. Из таблицы users необходимо извлечь пользователей, родившихся в августе и мае. Месяцы заданы в виде списка английских названий 
(may, august)

Решение: SELECT имя_выводимого_столбца FROM users WHERE значение_искомого_столбца  IN ('may', 'august'); 

5. Из таблицы catalogs извлекаются записи при помощи запроса. SELECT * FROM catalogs WHERE id IN (5, 1, 2); 
Отсортируйте записи в порядке, заданном в списке IN.

Решение: SELECT * FROM catalogs WHERE id IN (5, 1, 2) ORDER BY FIELD (5, 1, 2);

Практическое задание теме «Агрегация данных»

1. Подсчитайте средний возраст пользователей в таблице users.
SELECT AVG(TIMESTAMPDIFF(YEAR, NOW() - 'наименование_столбца_где_указывается_возраст_пользователей')) FROM users;

2. Подсчитайте количество дней рождения, которые приходятся на каждый из дней недели. Следует учесть, что необходимы дни недели текущего года, а не года рождения.

Решение: SELECT
  COUNT (DISTINCT DAYOFWEEK(REPLACE(название_столбца_с_датой_рождения, YEAR(название_столбца_с _датой_рождения), YEAR(NOW()))) FROM имя_таблицы)) AS week_name
FROM
  имя_таблицы
ORDER BY
  DAYNAME(week_name);

3. Подсчитайте произведение чисел в столбце таблицы

Решение: SELECT exp(SUM(log(value))) product FROM (VALUES(1),(2),(3),(4),(5)) X(value);


