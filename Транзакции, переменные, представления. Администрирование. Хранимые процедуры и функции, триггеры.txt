Практическое задание по теме “Транзакции, переменные, представления”

1. В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. 
Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

Решение: START TRANSACTION;
	 INSERT INTO sample.users
	 VALUES (SELECT * FROM shop.users WHERE shop.users.id=1)  
	 COMMIT;	

2. Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name 
из таблицы catalogs.

Решение: CREATE VIEW pr_cat AS
	 SELECT products.name FROM products AS p
	 INNER JOIN 
	 catalogs AS c
	 ON p.catalogs.id = c.id; 

3. Пусть имеется таблица с календарным полем created_at. В ней размещены разряженые календарные записи за август 2018 года 
'2018-08-01', '2016-08-04', '2018-08-16' и 2018-08-17. 
Составьте запрос, который выводит полный список дат за август, выставляя в соседнем поле значение 1, если дата присутствует 
в исходном таблице и 0, если она отсутствует.

Решение: SELECT created_at
	 FROM наименование_таблицы
	 ADD COLOMN tf AS
	 IF created_at IS NOT NULL THEN 1
	 ELSE 0; 

4. Пусть имеется любая таблица с календарным полем created_at. 
Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.

Решение: SELECT created_at
	 FROM наименование_таблицы
	 ORDER BY created_at	 
	 LIMIT (0, 5);

Практическое задание по теме “Администрирование MySQL” (эта тема изучается по вашему желанию)
1. Создайте двух пользователей которые имеют доступ к базе данных shop. 
Первому пользователю shop_read должны быть доступны только запросы на чтение данных, 
второму пользователю shop — любые операции в пределах базы данных shop.

Решение: GRANT SELECT ON shop
	 TO shop_read
	 IDENTIFIED BY задать_пароль_пользователя_shop_read;

	 GRANT ALL ON shop
	 TO shop
	 IDENTIFIED BY задать_пароль_пользователя_shop;


2. Пусть имеется таблица accounts содержащая три столбца id, name, password, содержащие первичный ключ, имя пользователя и его пароль. 
Создайте представление username таблицы accounts, предоставляющий доступ к столбца id и name. 
Создайте пользователя user_read, который бы не имел доступа к таблице accounts, однако, мог бы извлекать записи из представления username.

Решение: CREATE VIEW username AS
	 SELECT id, name
	 FROM accounts

	 GRANT SELECT ON username
	 TO user_read
	 IDENTIFIED BY задать_пароль_пользователя_user_read;

Практическое задание по теме “Хранимые процедуры и функции, триггеры"
1. Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. 
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", 
с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

CREATE FUNCTION welcome AS
CASE 
WHEN CURTIME() BETWEEN 06:00:00 AND 12:00:00 THEN "Доброе утро"
WHEN CURTIME() BETWEEN 12:00:01 AND 18:00:00 THEN "Добрый день"
WHEN CURTIME() BETWEEN 18:00:01 AND 00:00:00 THEN "Добрый вечер"
ELSE "Доброй ночи"
END CASE
END;

2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием. 
Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. 
Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. 
При попытке присвоить полям NULL-значение необходимо отменить операцию.

3. Напишите хранимую функцию для вычисления произвольного числа Фибоначчи. 
Числами Фибоначчи называется последовательность в которой число равно сумме двух предыдущих чисел. 
Вызов функции FIBONACCI(10) должен возвращать число 55.


